groups:
  - name: system.rules
    rules:
      - alert: HighCPUUsage
        expr: 100 - (avg(rate(node_cpu_seconds_total{mode="idle"}[5m])) * 100) > 85
        for: 2m
        labels:
          severity: warning
        annotations:
          summary: "High CPU usage detected"
          description: "CPU usage is above 85% for more than 2 minutes on {{ $labels.instance }}"

      - alert: HighMemoryUsage
        expr: (node_memory_MemTotal_bytes - node_memory_MemAvailable_bytes) / node_memory_MemTotal_bytes * 100 > 90
        for: 2m
        labels:
          severity: warning
        annotations:
          summary: "High memory usage detected"
          description: "Memory usage is above 90% on {{ $labels.instance }}"

      - alert: LowDiskSpace
        expr: (node_filesystem_avail_bytes{fstype!="tmpfs"} / node_filesystem_size_bytes{fstype!="tmpfs"}) * 100 < 10
        for: 1m
        labels:
          severity: critical
        annotations:
          summary: "Low disk space"
          description: "Disk space is below 10% on {{ $labels.instance }} mount {{ $labels.mountpoint }}"

      - alert: NodeDown
        expr: up{job=~"node-exporter.*"} == 0
        for: 1m
        labels:
          severity: critical
        annotations:
          summary: "Node is down"
          description: "Node {{ $labels.instance }} has been down for more than 1 minute"

  - name: container.rules
    rules:
      - alert: ContainerHighCPU
        expr: rate(container_cpu_usage_seconds_total[5m]) * 100 > 80
        for: 2m
        labels:
          severity: warning
        annotations:
          summary: "Container high CPU usage"
          description: "Container {{ $labels.name }} CPU usage is above 80%"

      - alert: ContainerHighMemory
        expr: container_memory_usage_bytes / container_spec_memory_limit_bytes * 100 > 90
        for: 2m
        labels:
          severity: warning
        annotations:
          summary: "Container high memory usage"
          description: "Container {{ $labels.name }} memory usage is above 90%"

      - alert: ContainerDown
        expr: up{job="cadvisor"} == 0
        for: 1m
        labels:
          severity: critical
        annotations:
          summary: "Container monitoring down"
          description: "cAdvisor is down on {{ $labels.instance }}"

  - name: network.rules
    rules:
      - alert: UniFiControllerDown
        expr: up{job=~"unpoller.*"} == 0
        for: 2m
        labels:
          severity: warning
        annotations:
          summary: "UniFi controller monitoring down"
          description: "UnPoller cannot reach UniFi controller on {{ $labels.instance }}"

      - alert: TraefikDown
        expr: up{job="traefik"} == 0
        for: 1m
        labels:
          severity: critical
        annotations:
          summary: "Traefik is down"
          description: "Traefik reverse proxy is not responding"

  - name: application.rules
    rules:
      - alert: GatusDown
        expr: up{job="gatus"} == 0
        for: 1m
        labels:
          severity: warning
        annotations:
          summary: "Gatus monitoring is down"
          description: "Gatus health check service is not responding"

      - alert: PortainerDown
        expr: up{job="portainer"} == 0
        for: 2m
        labels:
          severity: warning
        annotations:
          summary: "Portainer is down"
          description: "Portainer container management is not responding"
