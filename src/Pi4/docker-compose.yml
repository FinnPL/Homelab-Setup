services:
  traefik:
    image: traefik:3.5
    container_name: traefik
    restart: always
    ports:
      - 80:80
      - 443:443
    environment:
      - "TRAEFIK_USER=${TRAEFIK_USER}"
      - "TRAEFIK_PASSWORD=${TRAEFIK_PASSWORD}"
      - "CLOUDFLARE_EMAIL=${CLOUDFLARE_EMAIL}"
      - "CF_DNS_API_TOKEN=${CF_DNS_API_TOKEN}"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/traefik.yml:/etc/traefik/traefik.yml:ro
      - ./traefik/traefik_dynamic.yml:/etc/traefik/traefik_dynamic.yml:ro
      - traefik_certs:/certs

  portainer:
    image: portainer/portainer-ce:2.33.2
    container_name: portainer
    restart: always
    command: --admin-password ${PORTAINER_PASSWORD}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.portainer.rule=Host(`port.lippok.dev`)"
      - "traefik.http.routers.portainer.entrypoints=websecure"
      - "traefik.http.routers.portainer.tls.certresolver=letsencrypt"
      - "traefik.http.services.portainer.loadbalancer.server.port=9000"

  gatus:
    image: twinproduction/gatus:v5.25.0
    container_name: gatus
    restart: always
    environment:
      - "GATUS_CONFIG_PATH=/etc/gatus"
      - "DISCORD_WEBHOOK_URL=${DISCORD_WEBHOOK_URL}"
    volumes:
      - ./gatus:/etc/gatus:ro
      - gatus_data:/data
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.gatus.rule=Host(`gatus.lippok.dev`)"
      - "traefik.http.routers.gatus.entrypoints=websecure"
      - "traefik.http.routers.gatus.tls.certresolver=letsencrypt"
      - "traefik.http.services.gatus.loadbalancer.server.port=8080"

  homepage:
    image: gethomepage/homepage:v1.4.6
    container_name: homepage
    restart: always
    environment:
      - "HOMEPAGE_VAR_OPENWEATHERMAP_API_KEY=${HOMEPAGE_VAR_OPENWEATHERMAP_API_KEY}"
      - "HOMEPAGE_VAR_TRAEFIK_USER=${TRAEFIK_USER}"
      - "HOMEPAGE_VAR_TRAEFIK_PASSWORD=${TRAEFIK_PASSWORD_UNHASHED}"
      - "HOMEPAGE_VAR_UNIFI_USER=${HOMEPAGE_VAR_UNIFI_USER}"
      - "HOMEPAGE_VAR_UNIFI_PASSWORD=${HOMEPAGE_VAR_UNIFI_PASSWORD}"
      - "HOMEPAGE_VAR_MAILCOW_API_KEY=${HOMEPAGE_VAR_MAILCOW_API_KEY}"
      - "HOMEPAGE_VAR_PORTAINER_API_KEY=${HOMEPAGE_VAR_PORTAINER_API_KEY}"
      - "HOMEPAGE_ALLOWED_HOSTS=olympus.lippok.dev"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./homepage:/app/config
      - ./homepage/images:/app/images
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.homepage.rule=Host(`olympus.lippok.dev`)"
      - "traefik.http.routers.homepage.entrypoints=websecure"
      - "traefik.http.routers.homepage.tls.certresolver=letsencrypt"
      - "traefik.http.services.homepage.loadbalancer.server.port=3000"

  # Monitoring Stack
  prometheus:
    image: prom/prometheus:v3.6.0
    container_name: prometheus
    restart: always
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=30d'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    extra_hosts:
      - "host.docker.internal:host-gateway"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prometheus.rule=Host(`prometheus.lippok.dev`)"
      - "traefik.http.routers.prometheus.entrypoints=websecure"
      - "traefik.http.routers.prometheus.tls.certresolver=letsencrypt"
      - "traefik.http.services.prometheus.loadbalancer.server.port=9090"
      - "traefik.http.routers.prometheus.middlewares=auth@file"

  grafana:
    image: grafana/grafana:12.2.0
    container_name: grafana
    restart: always
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data_two:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`grafana.lippok.dev`)"
      - "traefik.http.routers.grafana.entrypoints=websecure"
      - "traefik.http.routers.grafana.tls.certresolver=letsencrypt"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"

  node-exporter:
    image: quay.io/prometheus/node-exporter:v1.9.1
    container_name: node-exporter
    restart: always
    command:
      - '--path.rootfs=/host'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    network_mode: host
    pid: host
    volumes:
      - '/:/host:ro,rslave'

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.52.1
    container_name: cadvisor
    restart: always
    privileged: true
    devices:
      - /dev/kmsg:/dev/kmsg
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /cgroup:/cgroup:ro

  unpoller:
    image: golift/unifi-poller:v2.15.4
    container_name: unpoller
    restart: always
    environment:
      - UP_UNIFI_DEFAULT_URL=https://10.10.0.1
      - UP_UNIFI_DEFAULT_USER=${HOMEPAGE_VAR_UNIFI_USER}
      - UP_UNIFI_DEFAULT_PASS=${HOMEPAGE_VAR_UNIFI_PASSWORD}
      - UP_UNIFI_DEFAULT_VERIFY_SSL=false
      - UP_PROMETHEUS_HTTP_LISTEN=0.0.0.0:9130
      - UP_PROMETHEUS_NAMESPACE=unpoller

  unpoller-remote:
    image: golift/unifi-poller:v2.15.4
    container_name: unpoller-remote
    restart: always
    environment:
      - UP_UNIFI_DEFAULT_URL=https://10.0.0.1
      - UP_UNIFI_DEFAULT_USER=${HOMEPAGE_VAR_UNIFI_USER}
      - UP_UNIFI_DEFAULT_PASS=${HOMEPAGE_VAR_UNIFI_PASSWORD}
      - UP_UNIFI_DEFAULT_VERIFY_SSL=false
      - UP_PROMETHEUS_HTTP_LISTEN=0.0.0.0:9131
      - UP_PROMETHEUS_NAMESPACE=unpoller_remote

  mailcow-exporter:
    image: ghcr.io/mailcow/prometheus-exporter:2
    container_name: mailcow-exporter
    restart: always
    environment:
      - MAILCOW_EXPORTER_HOST=mail.lippok.eu
      - MAILCOW_EXPORTER_API_KEY=${HOMEPAGE_VAR_MAILCOW_API_KEY}
      - MAILCOW_SKIP_TLS_VERIFY=false
      - MAILCOW_EXPORTER_INSECURE_DISABLE_ACCESS_PROTECTION=1

  fritzbox-exporter:
    image: pdreker/fritz_exporter:2.5.2
    container_name: fritzbox-exporter
    restart: always
    environment:
      - FRITZ_HOSTNAME=192.168.178.1
      - FRITZ_USERNAME=${FRITZBOX_USERNAME}
      - FRITZ_PASSWORD=${FRITZBOX_PASSWORD}

  alertmanager:
    image: prom/alertmanager:v0.28.1
    container_name: alertmanager
    restart: always
    volumes:
      - ./alertmanager:/etc/alertmanager
      - alertmanager_data:/alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.alertmanager.rule=Host(`alerts.lippok.dev`)"
      - "traefik.http.routers.alertmanager.entrypoints=websecure"
      - "traefik.http.routers.alertmanager.tls.certresolver=letsencrypt"
      - "traefik.http.services.alertmanager.loadbalancer.server.port=9093"
      - "traefik.http.routers.alertmanager.middlewares=auth@file"

  tailscale:
    image: tailscale/tailscale:v1.88.2
    container_name: tailscale-pi4
    hostname: pi4
    environment:
      - TS_AUTHKEY=${TAILSCALE_AUTHKEY}
      - TS_STATE_DIR=/var/lib/tailscale
      - TS_USERSPACE=false
      - TS_EXTRA_ARGS=--advertise-exit-node --advertise-routes=10.10.1.0/24
    volumes:
      - tailscale_data:/var/lib/tailscale
      - /dev/net/tun:/dev/net/tun
    cap_add:
      - NET_ADMIN
      - NET_RAW
    restart: always

volumes:
  traefik_certs:
  portainer_data:
  gatus_data:
  prometheus_data:
  grafana_data:
  grafana_data_two:
  alertmanager_data:
  tailscale_data:
